buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'idea' // optional (to generate IntelliJ IDEA project files)
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.sonarqube" version "3.3"
    id "org.flywaydb.flyway" version "6.5.0"
    id 'jacoco'
}

jar {
    group = 'muziekzaals'
    version = '0.0.1-SNAPSHOT'
/*sourceCompatibility = '17'*/
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    mavenCentral()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
}


dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.projectlombok:lombok:1.18.20'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core:8.5.5'
    implementation 'org.flywaydb:flyway-mysql:8.5.5'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.0.1'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.7'

    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation ('org.springframework.boot:spring-boot-starter-test'){
        exclude group: 'org.junit.vintage', module:'junit-vintage-engine'}
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'com.h2database:h2'
    testCompileOnly("junit:junit")
    }


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }

flyway {
    url = "jdbc:mysql://localhost:3306/muziekzaals"
    user = "root"
    password = ""
    }
}



jacocoTestReport {
    reports {
        xml.enabled true
    }
}
test.finalizedBy jacocoTestReport


tasks.named('sonarqube').configure {
    dependsOn test
}

